1) Посмотреть где я  - pwd
2) Создать папку - mkdir lesson_1
3) Зайти в папку - cd lesson_1
4) Создать 3 папки - mkdir flute oboe clarinet 
5) Зайти в любую папку - cd clarinet
6) Создать 5 файлов (3 txt, 2 json) - touch p1.txt p2.txt p3.txt p4.json p5.json
7) Создать 3 папки - mkdir cl1 cl2 cl3
8) Вывести список содержимого папки - ls -la
9) Открыть любой txt файл - cat p1.txt
10) Написать туда что-нибудь - cat >p1.txt 1) Bach 2) Mozart 3)Beethoven
11) Сохранить и выйти - Ctrl + C
12) Выйти из папки на уровень выше - cd ..
13) Переместить любые 2 файла, которые вы создали, в любую другую папку - 
mv clarinet/p1.txt flute/p1.txt
mv clarinet/p2.txt flute/p2.txt
14) Скопировать любые два файла - 
cp flute/p1.txt oboe/p1.txt
cp flute/p2.txt oboe/p2.txt
15) Найти файл по имени - find -name p1.txt
16) Просмотреть содержимое в реальном времени. Нам нужна команда tail -f
$ tail -f flute/p1.txt
1) Bach
2) Mozart
3) Beethoven
grep - это команда для поиска внутри текстовых файлов. Пробуем поиск слова Bach в файле flute/p1.txt. Команда - grep Bach flute/p1.txt Ответ - 1) Bach
17) Вывести несколько первых строк из текстового файла - head -n 2 flute/p1.txt
- добавил еще одну строку в файл flute/p1.txt для корректности выполнения задания, так как строчек изначально всего 3 - cat >> flute/p1.txt
18) Вывести несколько последних строк - tail -n 2 flute/p1.txt
19) Просмотреть содержимое длинного файла (команда less) - less flute/p1.txt 
1) Bach
2) Mozart
3) Beethoven
4) Chopen
flute/p1.txt (END)
для выхода из less и возврата к командной строке нажимаем Q
20) Вывести дату и время - date

=========
Задания *
1) Отправить http запрос на сервер http://162.55.220.5006/terminal-hw-request
Для отображения статического содержимого страницы требуется команда - curl
curl http://162.55.220.5006/terminal-hw-request
Ответ сервера:
{
  "Intro": "Hello!! This is your the first response from server",
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_y
our_String)&age=(set_your_number)",
    "result": [
      "Your_String",
      "Your_number"
    ]
  }
}
Переходим на следующий сайт , как указано в ответе от сервера (так же вводим нужные данные). 
Получаем вот такой результат:
$ curl "http://162.55.220.72:5006/get_method?name=George&age=28"
[
  "George",
  "28"
]
2) Написать скрипт который выполнит автоматически пункты 3,4,5,6,7,8,13
Для автоматизации используем скрипт Bash (#!/bin/bash)
#!/bin/bash
cd /e/35_group+
pwd
mkdir bashtest
cd bashtest
mkdir test1 test2 test3
cd test1
touch t1.txt t2.txt t3.txt t4.json t5.json 
mkdir t1 t2 t3
ls -la
mv t1.txt t1/t1.txt
mv t2.txt t2/t2.txt
При вводе через Git Bash все файлы и папки созданы. Успех!





